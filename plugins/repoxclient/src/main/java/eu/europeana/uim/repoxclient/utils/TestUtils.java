/*
 * Copyright 2007 EDL FOUNDATION
 *
 * Licensed under the EUPL, Version 1.1 or - as soon they
 * will be approved by the European Commission - subsequent
 * versions of the EUPL (the "Licence");
 * you may not use this work except in compliance with the
 * Licence.
 * You may obtain a copy of the Licence at:
 *
 * http://ec.europa.eu/idabc/eupl
 *
 * Unless required by applicable law or agreed to in
 * writing, software distributed under the Licence is
 * distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied.
 * See the Licence for the specific language governing
 * permissions and limitations under the Licence.
 */
package eu.europeana.uim.repoxclient.utils;

import java.io.StringWriter;
import java.math.BigInteger;

import org.jibx.runtime.BindingDirectory;
import org.jibx.runtime.IBindingFactory;
import org.jibx.runtime.IMarshallingContext;
import org.jibx.runtime.JiBXException;

import eu.europeana.uim.repoxclient.jibxbindings.Aggregator;
import eu.europeana.uim.repoxclient.jibxbindings.Country;
import eu.europeana.uim.repoxclient.jibxbindings.Description;
import eu.europeana.uim.repoxclient.jibxbindings.Name;
import eu.europeana.uim.repoxclient.jibxbindings.NameCode;
import eu.europeana.uim.repoxclient.jibxbindings.OaiSet;
import eu.europeana.uim.repoxclient.jibxbindings.OaiSource;
import eu.europeana.uim.repoxclient.jibxbindings.Provider;
import eu.europeana.uim.repoxclient.jibxbindings.Source.Sequence;

import eu.europeana.uim.repoxclient.jibxbindings.Source;
import eu.europeana.uim.repoxclient.jibxbindings.Type;
import eu.europeana.uim.repoxclient.jibxbindings.Url;

/**
 * 
 * 
 * @author Georgios Markakis
 */
public class TestUtils {

	
	
	public static Aggregator createAggregatorObj(){

		Aggregator aggr = new Aggregator();
		
	    Name name = new Name();
	    name.setName("JunitContainerAggregator2");
		aggr.setName(name);
		NameCode namecode = new NameCode();
		namecode.setNameCode("77777");
		aggr.setNameCode(namecode);
		Url url = new Url();
		url.setUrl("http://www.in.gr");
		aggr.setUrl(url);
		
		return aggr;
		
	}
	
	
	
	public static Provider createProviderObj(){
		
		Provider prov = new Provider();
		
	    Name name2 = new Name();
	    name2.setName("JunitContainerProvider");
		
		Country country = new Country();
		country.setCountry("gr");
		Description description = new Description();
		description.setDescription("Provider generated by Junit Tests");
		NameCode nameCode = new NameCode();
		nameCode.setNameCode("5555");
		Type type = new Type();
		type.setType("ARCHIVE");
		Url url = new Url();
		url.setUrl("http://www.in.gr");
		
		
		prov.setCountry(country );
		prov.setDescription(description);
		prov.setName(name2);
		prov.setNameCode(nameCode);
		prov.setType(type );
		prov.setUrl(url);
		
		
		return prov;
		
	}
	
	

	
		
	public static Source createOAIDataSource(){
	 	// /rest/dataSources/createOai?dataProviderId=DPRestr0&id=bdaSet&description=Biblioteca Digital Do Alentejo&nameCode=00123&name=Alentejo&
		// exportPath=D:/Projectos/repoxdata_new&schema=http://www.europeana.eu/schemas/ese/ESE-V3.3.xsd&namespace=http://www.europeana.eu/schemas/ese/&
		//metadataFormat=ese&oaiURL=http://bd1.inesc-id.pt:8080/repoxel/OAIHandler&oaiSet=bda

		Source ds = new Source();
		ds.setId("DPRestr0");
		Description des = new Description();
		des.setDescription("Biblioteca Digital Do Alentejo");
		ds.setDescription(des);
		ds.setNameCode("00123");
		ds.setName("Alentejo");
		ds.setExportPath("D:/Projectos/repoxdata_new");
		ds.setSchema("http://www.europeana.eu/schemas/ese/ESE-V3.3.xsd");
		ds.setNamespace("http://www.europeana.eu/schemas/ese/");
		ds.setMetadataFormat("ese");
		
		Sequence seq = new Sequence();
		OaiSet oaiSet = new OaiSet();
		oaiSet.setOaiSet("bda");
		seq.setOaiSet(oaiSet);
		OaiSource oaiSource = new OaiSource();
		oaiSource.setOaiSource("http://bd1.inesc-id.pt:8080/repoxel/OAIHandler");
		seq.setOaiSource(oaiSource);
		ds.setSequence(seq);
		

		return ds;
	}
	
	
	/**
	 * This method marshals the contents of a  JIBX Element and outputs the results to the
	 * Logger.  
	 * @param jaxbObject A JIBX representation of a SugarCRM SOAP Element. 
	 */
	public static  void logMarshalledObject(Object jibxObject,org.apache.log4j.Logger LOGGER){		
		IBindingFactory context;

		try {
			context = BindingDirectory.getFactory(jibxObject.getClass());

			IMarshallingContext mctx = context.createMarshallingContext();
			mctx.setIndent(2);
			StringWriter stringWriter = new StringWriter();
			mctx.setOutput(stringWriter);
			mctx.marshalDocument(jibxObject);
			LOGGER.info("===========================================");
			StringBuffer sb = new StringBuffer("Rest XML Response for Class: ");
			sb.append(jibxObject.getClass().getSimpleName());
			LOGGER.info(sb.toString());
			LOGGER.info(stringWriter.toString());
			LOGGER.info("===========================================");
		} catch (JiBXException e) {

			e.printStackTrace();
		}
	}
}
