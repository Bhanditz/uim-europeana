in progress
===========

- clean up the API
- fix the GUI and the progress passing
- WProcessor should save the status once a workflow is finished
- provision the WorkflowProcessor thrhough blueprint, not through instance creation

- mongodb logging engine: integration tests

functionality:
==============

- GUI:
  - New execution
    - later: display total number of MDRs on collection selection
  - Overview
  - Workflow view
    - new tab with a graphical representation of the worklows
    - detail view (with steps) for each workflow
  - Log view
    - new tab that makes it possible to display the logs of an execution (select an execution -> get the logs)
    - later: link to download the logs
  - general:
    - make GUI more robust against backend failures
    - fix the (most likely concurrency) issue avoiding the queue size to be displayed outside its main thread
    - better way to redeploy GWT module to OSGI environment
       - Pax Runner is outdated there, not sure what we can do
    - GWT integration in Karaf Webconsole? (maybe not necessary)

- orchestrator:
  - log the time a plugin takes for execution (statistics)
    make this behavior configurable
  - make timeout for task configurable
  - recovery handling: Orchestrator#getBatchFor should provide for crash recovery, i.e. the engine should
    persist the status of MDRs in the workflow, i.e. if they went through the full workflow
    later: fine-grained recovery on step basis
  - error handling on task timeout
  - cleanup failed tasks after N iterations
  - command interface orchestrator:
    - show status
  - later: gracefully handle other services becoming unavailable (e.g. storage, ...)

- mongo logging engine
  - integration tests

- storage: MangoDB-based implementation
  - optimize it

- core plugins:
  - meta data mapping / conversion
  - URL checker
  - thumbnail downloader
  - ...

- GUI:
  - OsgiManager in Apache Karaf / webconsole


design:
=======

- maybe a better name for UimEntity? MetaDataRecord, Collection, Provider, ... are all data sets of some sort --> DataSet?

- mongodb storage:
  - review MDR interface design, see commented out part of the StorageEngine unit test of the mongo module

- prioritisation:
  - add priority level in the Request?
  - how to inform the orchestrator that a priority changed?

- rollback of an execution / request
  - for now, do not do a rollback, but do a clean


configuration:
==============
- clean up dependencies, probably we have duplicated declarations (mvn dependency:analyze)

testing:
========
- unit test for ProcessingContainer / parallel execution